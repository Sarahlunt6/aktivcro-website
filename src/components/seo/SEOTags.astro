---
export interface SEOProps {
  // Basic Meta Tags
  title: string;
  description: string;
  keywords?: string[];
  canonical?: string;
  
  // Open Graph Tags
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: string;
  ogImageAlt?: string;
  ogType?: 'website' | 'article' | 'product' | 'profile';
  ogUrl?: string;
  ogSiteName?: string;
  ogLocale?: string;
  
  // Twitter Card Tags  
  twitterCard?: 'summary' | 'summary_large_image' | 'app' | 'player';
  twitterSite?: string;
  twitterCreator?: string;
  twitterTitle?: string;
  twitterDescription?: string;
  twitterImage?: string;
  twitterImageAlt?: string;
  
  // Article specific (for blog posts)
  articleAuthor?: string;
  articlePublishedTime?: string;
  articleModifiedTime?: string;
  articleSection?: string;
  articleTags?: string[];
  
  // Technical SEO
  robots?: string;
  googlebot?: string;
  viewport?: string;
  themeColor?: string;
  msapplicationTileColor?: string;
  
  // Structured Data
  jsonLd?: any[];
}

const {
  title,
  description,
  keywords = [],
  canonical,
  ogTitle,
  ogDescription,
  ogImage,
  ogImageAlt,
  ogType = 'website',
  ogUrl,
  ogSiteName = 'AktivCRO',
  ogLocale = 'en_US',
  twitterCard = 'summary_large_image',
  twitterSite = '@AktivCRO',
  twitterCreator,
  twitterTitle,
  twitterDescription,
  twitterImage,
  twitterImageAlt,
  articleAuthor,
  articlePublishedTime,
  articleModifiedTime,
  articleSection,
  articleTags = [],
  robots = 'index, follow',
  googlebot = 'index, follow',
  viewport = 'width=device-width, initial-scale=1.0',
  themeColor = '#20466f',
  msapplicationTileColor = '#20466f',
  jsonLd = []
} = Astro.props;

// Default values
const siteUrl = Astro.site?.toString() || 'https://aktivcro.com';
const currentUrl = canonical || new URL(Astro.url.pathname, siteUrl).toString();
const defaultImage = `${siteUrl}/og-image.svg`;

// Prepare meta values with fallbacks
const metaTitle = title.length > 60 ? title.substring(0, 57) + '...' : title;
const metaDescription = description.length > 160 ? description.substring(0, 157) + '...' : description;
const finalOgImage = ogImage || defaultImage;
const finalOgTitle = ogTitle || title;
const finalOgDescription = ogDescription || description;
const finalTwitterTitle = twitterTitle || finalOgTitle;
const finalTwitterDescription = twitterDescription || finalOgDescription;
const finalTwitterImage = twitterImage || finalOgImage;

// Generate keywords string
const keywordsString = keywords.length > 0 ? keywords.join(', ') : '';

// Combine article tags with keywords for articles
const allKeywords = ogType === 'article' && articleTags.length > 0 
  ? [...keywords, ...articleTags] 
  : keywords;
---

<!-- Primary Meta Tags -->
<title>{metaTitle}</title>
<meta name="title" content={metaTitle} />
<meta name="description" content={metaDescription} />
{keywordsString && <meta name="keywords" content={keywordsString} />}
<meta name="author" content="AktivCRO" />
<meta name="robots" content={robots} />
<meta name="googlebot" content={googlebot} />
<meta name="viewport" content={viewport} />

<!-- Canonical URL -->
<link rel="canonical" href={currentUrl} />

<!-- Theme Colors -->
<meta name="theme-color" content={themeColor} />
<meta name="msapplication-TileColor" content={msapplicationTileColor} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={ogType} />
<meta property="og:url" content={ogUrl || currentUrl} />
<meta property="og:title" content={finalOgTitle} />
<meta property="og:description" content={finalOgDescription} />
<meta property="og:image" content={finalOgImage} />
{ogImageAlt && <meta property="og:image:alt" content={ogImageAlt} />}
<meta property="og:site_name" content={ogSiteName} />
<meta property="og:locale" content={ogLocale} />

<!-- Article specific Open Graph tags -->
{ogType === 'article' && (
  <>
    {articleAuthor && <meta property="article:author" content={articleAuthor} />}
    {articlePublishedTime && <meta property="article:published_time" content={articlePublishedTime} />}
    {articleModifiedTime && <meta property="article:modified_time" content={articleModifiedTime} />}
    {articleSection && <meta property="article:section" content={articleSection} />}
    {articleTags.map(tag => <meta property="article:tag" content={tag} />)}
  </>
)}

<!-- Twitter -->
<meta property="twitter:card" content={twitterCard} />
<meta property="twitter:url" content={currentUrl} />
<meta property="twitter:title" content={finalTwitterTitle} />
<meta property="twitter:description" content={finalTwitterDescription} />
<meta property="twitter:image" content={finalTwitterImage} />
{twitterImageAlt && <meta property="twitter:image:alt" content={twitterImageAlt} />}
{twitterSite && <meta property="twitter:site" content={twitterSite} />}
{twitterCreator && <meta property="twitter:creator" content={twitterCreator} />}

<!-- Additional SEO Meta Tags -->
<meta name="format-detection" content="telephone=no" />
<meta name="mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
<meta name="apple-mobile-web-app-title" content="AktivCRO" />

<!-- Favicons and App Icons -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="apple-touch-icon" href="/favicon.svg" />
<link rel="manifest" href="/manifest.json" />

<!-- Preconnect to external domains -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="preconnect" href="https://www.googletagmanager.com" />

<!-- DNS Prefetch for external resources -->
<link rel="dns-prefetch" href="//fonts.googleapis.com" />
<link rel="dns-prefetch" href="//www.google-analytics.com" />
<link rel="dns-prefetch" href="//www.googletagmanager.com" />

<!-- Language and Region -->
<html lang="en" />
<meta name="geo.region" content="US" />
<meta name="geo.placename" content="United States" />

<!-- Security Headers (Meta) -->
<meta http-equiv="X-Content-Type-Options" content="nosniff" />
<meta http-equiv="X-Frame-Options" content="DENY" />
<meta http-equiv="X-XSS-Protection" content="1; mode=block" />

<!-- Structured Data (JSON-LD) -->
{jsonLd.length > 0 && jsonLd.map(schema => (
  <script type="application/ld+json" set:html={JSON.stringify(schema, null, 0)} />
))}

<!-- Rich Snippets Hints -->
{ogType === 'article' && (
  <meta name="article:published_time" content={articlePublishedTime} />
)}

<!-- Additional Performance Hints -->
{Astro.url.pathname === '/' && (
  <>
    <link rel="prefetch" href="/about" />
    <link rel="prefetch" href="/calculator" />
    <link rel="prefetch" href="/contact" />
  </>
)}

<!-- Verification Tags (to be added when accounts are set up) -->
<!-- <meta name="google-site-verification" content="YOUR_GOOGLE_VERIFICATION_CODE" /> -->
<!-- <meta name="msvalidate.01" content="YOUR_BING_VERIFICATION_CODE" /> -->
<!-- <meta name="yandex-verification" content="YOUR_YANDEX_VERIFICATION_CODE" /> -->

<!-- Hreflang for internationalization (if needed) -->
<!-- <link rel="alternate" hreflang="en" href="https://aktivcro.com/" /> -->
<!-- <link rel="alternate" hreflang="x-default" href="https://aktivcro.com/" /> -->